package com.example.editor.presentation.compiler

object data {
    val list = listOf(
        //library
        "#include<iostream>",
        "#include<string>",
        "#include <vector>",
        "#include <array>",
        //Data Type
        "const",
        "short",
        "bool",
        "true",
        "false",
        "unsigned",
        "int",
        "long",
        "unsigned long long int",
        "char",
        "float",
        "double",
        "wchar_t",
        //Macro Constants
        "CHAR_MIN",
        "CHAR_MAX",
        "SCHAR_MIN",
        "SCHAR_MAX",
        "UCHAR_MAX",
        "CHAR_BIT",
        "MB_LEN_MAX",
        "SHRT_MIN",
        "SHRT_MAX",
        "USHRT_MAX",
        "INT_MIN",
        "INT_MAX",
        "UINT_MAX",
        "LONG_MIN",
        "LONG_MAX",
        "ULONG_MAX",
        "LLONG_MIN",
        "LLONG_MAX",
        "ULLONG_MAX",
        //Input and Output
        "scanf()",
        "printf()",
        "cout",
        "cin",
        "cerr",
        "clog",
        "getline",
        "hex",
        "oct",
        "setbase()",
        "endl",
        "ends",
        "flush",
        "setw()",
        "setfill()",
        "fixed",
        "setiosflags()",
        "resetiosflags()",
        "setprecision()",
        "NULL",
        //Decision Making
        "if",
        "else",
        "switch",
        "case",
        "default:",
        "break",
        "continue",
        "goto",
        "return",
        //Loops
        "for(int i=0;i<n;++i){\n}",
        "while",
        "do",
        //function
        "void",
        "sizeof()",
        "malloc()",
        "max()",
        "min()",
        "swap()",
        "malloc()",
        "calloc()",
        "free()",
        "realloc()",
        //string
        "string",
        "strtok()",
        //struct
        "struct",
        "typedef",
        "enum",
        //object-oriented-programming
        "class",
        "public:",
        "private:",
        "protected:",
        "friend",
        "static",
        "this",
    )
}

object dataDote{
    val list = listOf(
        "getline()",
        "get()",
        "read",
        "ignore",
        "write",
        "put",
        "push_back()",
        "pop_back()",
        "capacity()",
        "resize()",
        "length()",
        "shrink_to_fit()",
        "begin()",
        "end()",
        "rbegin()",
        "rend()",
        "cbegin()",
        "cend()",
        "crbegin()",
        "crend()",
        "copy()",
        "swap()",
        "append()",
        "strcat()",
        "substr()",
        "find()"
    )

}

